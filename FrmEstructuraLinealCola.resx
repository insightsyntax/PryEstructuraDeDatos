<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        jB8AAAAASUVORK5CYII=
</value>
  </data>
</root>